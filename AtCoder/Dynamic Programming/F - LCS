/**
 *    author:  FrenH
 *    created: 03.06.2025 01:56:22
 *    problem: https://atcoder.jp/contests/dp/tasks/dp_f
**/

#include <bits/stdc++.h>
using namespace std;

//Shortcut
#define fp(i, l, r)     for(i = l; i < r; i++)
#define ms(x, y)        memset(x, y, sizeof(x))
#define all(x)          x.begin(), x.end()
#define sc              second
#define fr              first
#define el              '\n'

using dd                = double;
using ll                = long long;
using ull               = unsigned long long;
using pii               = pair<int, int>;
using pll               = pair<ll, ll>;

// Global variabel
const int S = 1e5,
minf = INT_MIN, 
pinf = INT_MAX,
mod = 1e9 + 7;

// Fren -> Not, Equal, AND, OR
// ASCII 0 = 48, A = 65, a = 97

int main()
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr); std::cout.tie(nullptr);
    
    string s1, s2;
    int n1, n2, i, j;

    cin >> s1 >> s2;
    n1 = s1.length(), n2 = s2.length();
    vector<vector<int>> mat(n1 + 1, vector<int> (n2 + 1));
    for(i = 1; i <= n1; i++) {
        for(j = 1; j <= n2; j++) {
            if(s1[i - 1] == s2[j - 1])
                mat[i][j] = mat[i - 1][j - 1] + 1;
            else mat[i][j] = max(mat[i - 1][j], mat[i][j - 1]);
        }
    }

    // Backtracking
    i = n1, j = n2;
    stack<char> ans;
    while(mat[i][j]) {
        if(s1[i - 1] == s2[j - 1]) 
            ans.push(s1[i - 1]), i--, j--;
        else {
            if(mat[i][j - 1] >= mat[i - 1][j]) j--;
            else                               i--;
        }
    }
    while(!ans.empty()) cout << ans.top(), ans.pop();
    cout << el;
    return 0;
}
